<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Matching Interface | Father's Advice</title>
    <link rel="stylesheet" href="/css/mentor.css" />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 300px;
        text-align: center;
      }
      .loading-spinner {
        width: 50px;
        height: 50px;
        border: 5px solid #f3f3f3;
        border-top: 5px solid #ff6b00;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 20px;
      }
      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
      .loading-text {
        color: #666;
        font-size: 1.1em;
        margin-top: 10px;
      }
      .status-message {
        padding: 20px;
        margin: 20px;
        border-radius: 5px;
        text-align: center;
      }
      .processing {
        background-color: #fff3cd;
        color: #856404;
      }
      .error {
        background-color: #f8d7da;
        color: #721c24;
      }
      .pending {
        background-color: #d4edda;
        color: #155724;
      }
      .matched {
        background-color: #cce5ff;
        color: #004085;
      }
      .matched-section {
        padding: 2rem;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin: 2rem auto;
        max-width: 1200px;
      }
      .mentee-cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
      }
      .mentee-card {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        transition: transform 0.2s ease;
      }
      .mentee-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      }
      .mentee-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #eee;
      }
      .mentee-header h3 {
        margin: 0;
        color: #333;
        font-size: 1.25rem;
      }
      .compatibility-score {
        background-color: #e8f5e9;
        color: #2e7d32;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
      }
      .mentee-details {
        margin-top: 1rem;
      }
      .mentee-details p {
        margin: 0.5rem 0;
        color: #666;
      }
      .skills-section {
        margin: 1rem 0;
      }
      .skill-badges {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 0.5rem;
      }
      .skill-badge {
        background-color: #f5f5f5;
        color: #333;
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.9rem;
      }
      .subject-match {
        background-color: #fff3e0;
        padding: 1rem;
        border-radius: 8px;
        margin: 1rem 0;
      }
      .subject-percentages {
        display: flex;
        justify-content: space-between;
        margin-top: 0.5rem;
        font-size: 0.9rem;
        color: #666;
      }
      .bio-section {
        margin: 1rem 0;
        padding: 1rem;
        background-color: #f8f9fa;
        border-radius: 8px;
      }
      .action-buttons {
        margin-top: 1.5rem;
        display: flex;
        gap: 1rem;
      }
      .btn-primary {
        background-color: #ff6b00;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.2s ease;
      }
      .btn-primary:hover {
        background-color: #e65100;
      }
      .no-matches {
        text-align: center;
        padding: 3rem;
        color: #666;
        background-color: #f8f9fa;
        border-radius: 8px;
        margin-top: 2rem;
      }
      .error-container {
        text-align: center;
        padding: 2rem;
        margin: 2rem auto;
        max-width: 600px;
        background-color: #fff3f3;
        border-radius: 8px;
        color: #d32f2f;
      }
      .retry-button {
        background-color: #d32f2f;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 1rem;
        transition: background-color 0.2s ease;
      }
      .retry-button:hover {
        background-color: #b71c1c;
      }
      @media (max-width: 768px) {
        .mentee-cards {
          grid-template-columns: 1fr;
        }
        .subject-percentages {
          flex-direction: column;
          gap: 0.5rem;
        }
        .mentee-header {
          flex-direction: column;
          gap: 1rem;
          text-align: center;
        }
      }
      .recent-matches {
        padding: 2rem;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin: 2rem auto;
        max-width: 1200px;
      }
      .recent-matches h2 {
        color: #333;
        margin-bottom: 1.5rem;
      }
      .recent-matches-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1.5rem;
      }
      .recent-match-card {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
        transition: transform 0.2s ease;
      }
      .recent-match-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      }
      .match-status {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.8rem;
        margin-top: 0.5rem;
      }
      .status-online {
        background-color: #e8f5e9;
        color: #2e7d32;
      }
      .status-offline {
        background-color: #f5f5f5;
        color: #666;
      }
      .match-time {
        font-size: 0.8rem;
        color: #666;
        margin-top: 0.5rem;
      }
      .tabs {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
        border-bottom: 1px solid #eee;
        padding-bottom: 1rem;
      }
      .tab {
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.2s ease;
      }
      .tab.active {
        background-color: #ff6b00;
        color: white;
      }
      .tab:hover:not(.active) {
        background-color: #f5f5f5;
      }
      .tab-content {
        display: none;
      }
      .tab-content.active {
        display: block;
      }
      .offline {
        border: 1px solid #ddd;
        background-color: #f9f9f9;
      }
      .status-badge {
        background-color: #6c757d;
        color: white;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.8em;
        margin-left: 10px;
      }
      .expertise-section {
        margin-bottom: 15px;
      }
      .expertise-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-top: 5px;
      }
      .expertise-tag {
        background-color: #e3f2fd;
        color: #1976d2;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.9em;
      }
      .skill-badges {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-top: 5px;
      }
      .skill-badge {
        background-color: #f0f4c3;
        color: #827717;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.9em;
      }
      .bio-section {
        margin-top: 15px;
        padding-top: 15px;
        border-top: 1px solid #eee;
      }
      .action-buttons {
        margin-top: 20px;
        display: flex;
        justify-content: flex-end;
      }
      .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        transition: background-color 0.3s;
      }
      .btn-primary {
        background-color: #2196f3;
        color: white;
      }
      .btn-primary:hover {
        background-color: #1976d2;
      }
      .no-matches {
        text-align: center;
        padding: 30px;
        color: #666;
        font-size: 1.1em;
      }
    </style>
  </head>
  <body>
    <!-- Page Title -->
    <div class="page-title">
      <h1>
        <% if (userRole === 'mentor') { %> Find Mentees <% } else { %> Find
        Mentors <% } %>
      </h1>
    </div>

    <!-- Navbar -->
    <header>
      <div class="navbar">
        <div class="logo-container">
          <a
            href="<%= userRole === 'mentor' ? '/mentor_dashboard' : '/mentee_profile' %>"
          >
            <img src="/images/logo only.png" alt="Logo" class="logo" />
          </a>
        </div>
        <div class="nav-links">
          <a
            href="<%= userRole === 'mentor' ? '/mentor_dashboard' : '/mentee_profile' %>"
            class="nav-link"
            >Dashboard</a
          >
          <a href="/matching_interface" class="nav-link">Matching</a>
        </div>
      </div>
    </header>

    <div class="container">
      <% if (userRole === 'mentor') { %>
      <!-- Mentor View - Show Mentees -->
      <div class="tabs">
        <div class="tab active" onclick="switchTab('matches')">
          Available Mentees
        </div>
        <div class="tab" onclick="switchTab('offline')">Offline Mentees</div>
      </div>

      <div id="matches-tab" class="tab-content active">
        <div class="matched-section">
          <h2>Matched Mentees</h2>
          <% if (typeof matches !== 'undefined' && matches && matches.length >
          0) { %>
          <div class="mentee-cards">
            <% matches.forEach(mentee => { %>
            <div class="mentee-card">
              <div class="mentee-header">
                <h3><%= mentee.mentee_details.name %></h3>
                <span class="compatibility-score">
                  <%= Math.round(mentee.compatibility_score * 100) %>% Match
                </span>
              </div>
              <div class="mentee-details">
                <p>
                  <strong>Email:</strong> <%= mentee.mentee_details.email %>
                </p>
                <p>
                  <strong>Education:</strong> <%=
                  mentee.mentee_details.education || 'Not specified' %>
                </p>
                <div class="skills-section">
                  <strong>Skills:</strong>
                  <% if (mentee.mentee_details.skills &&
                  mentee.mentee_details.skills.length > 0) { %>
                  <div class="skill-badges">
                    <% mentee.mentee_details.skills.forEach(skill => { %>
                    <span class="skill-badge"><%= skill %></span>
                    <% }); %>
                  </div>
                  <% } else { %>
                  <p>No skills listed</p>
                  <% } %>
                </div>
                <% if (mentee.mentee_details.matching_subject) { %>
                <div class="subject-match">
                  <strong>Best Subject Match:</strong>
                  <p><%= mentee.mentee_details.matching_subject %></p>
                  <div class="subject-percentages">
                    <p>
                      Match Percentage: <%=
                      Math.round(mentee.mentee_details.matching_percentage *
                      100) %>%
                    </p>
                  </div>
                </div>
                <% } %>
                <div class="bio-section">
                  <strong>Bio:</strong>
                  <p>
                    <%= mentee.mentee_details.brief_bio || 'No bio provided' %>
                  </p>
                </div>
              </div>
              <div class="action-buttons">
                <button
                  class="btn btn-primary"
                  onclick="startSession('<%= mentee.mentee_id %>')"
                >
                  Start Session
                </button>
              </div>
            </div>
            <% }); %>
          </div>
          <% } else { %>
          <div class="no-matches">
            <p>
              No matched mentees found at the moment. Please check back later.
            </p>
          </div>
          <% } %>
        </div>
      </div>

      <div id="offline-tab" class="tab-content">
        <div class="matched-section">
          <h2>Offline Mentees</h2>
          <% if (typeof offlineMatches !== 'undefined' && offlineMatches &&
          offlineMatches.length > 0) { %>
          <div class="mentee-cards">
            <% offlineMatches.forEach(mentee => { %>
            <div class="mentee-card offline">
              <div class="mentee-header">
                <h3><%= mentee.mentee_details.name %></h3>
                <span class="compatibility-score">
                  <%= Math.round(mentee.compatibility_score * 100) %>% Match
                </span>
                <span class="status-badge">Offline</span>
              </div>
              <div class="mentee-details">
                <p>
                  <strong>Email:</strong> <%= mentee.mentee_details.email %>
                </p>
                <p>
                  <strong>Education:</strong> <%=
                  mentee.mentee_details.education || 'Not specified' %>
                </p>
                <div class="skills-section">
                  <strong>Skills:</strong>
                  <% if (mentee.mentee_details.skills &&
                  mentee.mentee_details.skills.length > 0) { %>
                  <div class="skill-badges">
                    <% mentee.mentee_details.skills.forEach(skill => { %>
                    <span class="skill-badge"><%= skill %></span>
                    <% }); %>
                  </div>
                  <% } else { %>
                  <p>No skills listed</p>
                  <% } %>
                </div>
                <% if (mentee.mentee_details.matching_subject) { %>
                <div class="subject-match">
                  <strong>Best Subject Match:</strong>
                  <p><%= mentee.mentee_details.matching_subject %></p>
                  <div class="subject-percentages">
                    <p>
                      Match Percentage: <%=
                      Math.round(mentee.mentee_details.matching_percentage *
                      100) %>%
                    </p>
                  </div>
                </div>
                <% } %>
                <div class="bio-section">
                  <strong>Bio:</strong>
                  <p>
                    <%= mentee.mentee_details.brief_bio || 'No bio provided' %>
                  </p>
                </div>
              </div>
              <div class="action-buttons">
                <button
                  class="btn btn-primary"
                  onclick="requestOfflineMatch('<%= mentee.mentee_id %>')"
                >
                  Request Match
                </button>
              </div>
            </div>
            <% }); %>
          </div>
          <% } else { %>
          <div class="no-matches">
            <p>
              No offline mentees found at the moment. Please check back later.
            </p>
          </div>
          <% } %>
        </div>
      </div>
      <% } else { %>
      <!-- Mentee View - Show Mentors -->
      <div class="tabs">
        <div class="tab active" onclick="switchTab('matches')">
          Available Mentors
        </div>
        <div class="tab" onclick="switchTab('offline')">Offline Mentors</div>
      </div>

      <div id="matches-tab" class="tab-content active">
        <div class="matched-section">
          <h2>Matched Mentors</h2>
          <% if (typeof matches !== 'undefined' && matches && matches.length >
          0) { %>
          <div class="mentee-cards">
            <% matches.forEach(mentor => { %>
            <div class="mentee-card">
              <div class="mentee-header">
                <h3><%= mentor.mentor_details.name %></h3>
                <span class="compatibility-score">
                  <%= Math.round(mentor.compatibility_score * 100) %>% Match
                </span>
              </div>
              <div class="mentee-details">
                <p>
                  <strong>Email:</strong> <%= mentor.mentor_details.email %>
                </p>
                <p>
                  <strong>Experience:</strong> <%=
                  mentor.mentor_details.yearOfExperience || 'Not specified' %>
                  years
                </p>
                <div class="expertise-section">
                  <strong>Expertise:</strong>
                  <% if (mentor.mentor_details.expertise &&
                  mentor.mentor_details.expertise.length > 0) { %>
                  <div class="expertise-tags">
                    <% mentor.mentor_details.expertise.forEach(exp => { %>
                    <span class="expertise-tag"><%= exp %></span>
                    <% }); %>
                  </div>
                  <% } else { %>
                  <p>No expertise listed</p>
                  <% } %>
                </div>
                <% if (mentor.mentor_details.matching_subject) { %>
                <div class="subject-match">
                  <strong>Best Subject Match:</strong>
                  <p><%= mentor.mentor_details.matching_subject %></p>
                  <div class="subject-percentages">
                    <p>
                      Match Percentage: <%=
                      Math.round(mentor.mentor_details.matching_percentage *
                      100) %>%
                    </p>
                  </div>
                </div>
                <% } %>
                <div class="bio-section">
                  <strong>Bio:</strong>
                  <p>
                    <%= mentor.mentor_details.briefBio || 'No bio provided' %>
                  </p>
                </div>
              </div>
              <div class="action-buttons">
                <button
                  class="btn btn-primary"
                  onclick="startSession('<%= mentor.mentor_id %>')"
                >
                  Start Session
                </button>
              </div>
            </div>
            <% }); %>
          </div>
          <% } else { %>
          <div class="no-matches">
            <p>
              No matched mentors found at the moment. Please check back later.
            </p>
          </div>
          <% } %>
        </div>
      </div>

      <div id="offline-tab" class="tab-content">
        <div class="matched-section">
          <h2>Offline Mentors</h2>
          <% if (typeof offlineMatches !== 'undefined' && offlineMatches &&
          offlineMatches.length > 0) { %>
          <div class="mentee-cards">
            <% offlineMatches.forEach(mentor => { %>
            <div class="mentee-card offline">
              <div class="mentee-header">
                <h3><%= mentor.mentor_details.name %></h3>
                <span class="compatibility-score">
                  <%= Math.round(mentor.compatibility_score * 100) %>% Match
                </span>
                <span class="status-badge">Offline</span>
              </div>
              <div class="mentee-details">
                <p>
                  <strong>Email:</strong> <%= mentor.mentor_details.email %>
                </p>
                <p>
                  <strong>Experience:</strong> <%=
                  mentor.mentor_details.yearOfExperience || 'Not specified' %>
                  years
                </p>
                <div class="expertise-section">
                  <strong>Expertise:</strong>
                  <% if (mentor.mentor_details.expertise &&
                  mentor.mentor_details.expertise.length > 0) { %>
                  <div class="expertise-tags">
                    <% mentor.mentor_details.expertise.forEach(exp => { %>
                    <span class="expertise-tag"><%= exp %></span>
                    <% }); %>
                  </div>
                  <% } else { %>
                  <p>No expertise listed</p>
                  <% } %>
                </div>
                <% if (mentor.mentor_details.matching_subject) { %>
                <div class="subject-match">
                  <strong>Best Subject Match:</strong>
                  <p><%= mentor.mentor_details.matching_subject %></p>
                  <div class="subject-percentages">
                    <p>
                      Match Percentage: <%=
                      Math.round(mentor.mentor_details.matching_percentage *
                      100) %>%
                    </p>
                  </div>
                </div>
                <% } %>
                <div class="bio-section">
                  <strong>Bio:</strong>
                  <p>
                    <%= mentor.mentor_details.briefBio || 'No bio provided' %>
                  </p>
                </div>
              </div>
              <div class="action-buttons">
                <button
                  class="btn btn-primary"
                  onclick="requestOfflineMatch('<%= mentor.mentor_id %>')"
                >
                  Request Match
                </button>
              </div>
            </div>
            <% }); %>
          </div>
          <% } else { %>
          <div class="no-matches">
            <p>
              No offline mentors found at the moment. Please check back later.
            </p>
          </div>
          <% } %>
        </div>
      </div>
      <% } %>
    </div>

    <% if (errorMessage) { %>
    <div class="error-container">
      <% switch(errorMessage) { case 'algorithm_failed': %>
      <p>匹配算法运行失败，请稍后再试</p>
      <% break; %> <% case 'no_matches_found': %>
      <p>暂时没有找到匹配的学员，请尝试调整您的资料</p>
      <% break; %> <% case 'processing_error': %>
      <p>数据处理错误，请联系管理员</p>
      <% break; %> <% default: %>
      <p>匹配过程中出现错误: <%= errorMessage %></p>
      <% } %>

      <button
        onclick="window.location.href='/matching_interface'"
        class="retry-button"
      >
        重新尝试
      </button>
    </div>
    <% } %>

    <script>
      // Get the processing state from the server-side variable
      const isProcessing = <%= typeof isProcessing !== 'undefined' && isProcessing ? 'true' : 'false' %>;

      function switchTab(tabName) {
        // Hide all tab contents
        const tabContents = document.querySelectorAll('.tab-content');
        tabContents.forEach(content => {
          content.classList.remove('active');
        });

        // Deactivate all tabs
        const tabs = document.querySelectorAll('.tab');
        tabs.forEach(tab => {
          tab.classList.remove('active');
        });

        // Activate the selected tab and content
        document.getElementById(`${tabName}-tab`).classList.add('active');
        document.querySelector(`.tab[onclick="switchTab('${tabName}')"]`).classList.add('active');
      }

      function startSession(userId) {
        // Implement session start logic
        console.log('Starting session with user:', userId);
        // Redirect to session page or show session interface
        window.location.href = `/session?user_id=${userId}`;
      }

      function requestOfflineMatch(userId) {
        // Implement offline match request logic
        console.log('Requesting offline match with user:', userId);
        alert('Request sent! The user will be notified when they come online.');
      }

      // Function to check matching status
      async function checkMatchingStatus() {
        try {
          const response = await fetch('/check-matching-status');
          const data = await response.json();

          if (data.status === 'completed') {
            // Reload the page to show matches
            window.location.reload();
          } else if (data.status === 'processing') {
            // Check again in 2 seconds
            setTimeout(checkMatchingStatus, 2000);
          }
        } catch (error) {
          console.error('Error checking matching status:', error);
        }
      }

      // Start checking if we're in processing state
      document.addEventListener('DOMContentLoaded', function() {
        if (isProcessing) {
          checkMatchingStatus();
        }
      });

      async function requestMentor(mentorId) {
        try {
          const response = await fetch('/request-mentor', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ mentorId })
          });

          if (response.ok) {
            alert('Request sent successfully! The mentor will be notified.');
          } else {
            alert('Failed to send request. Please try again.');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while sending the request.');
        }
      }

      async function sendConnectionRequest(menteeId) {
        try {
          const response = await fetch('/send-connection-request', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ menteeId })
          });

          if (response.ok) {
            alert('Connection request sent successfully!');
          } else {
            alert('Failed to send connection request. Please try again.');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while sending the connection request.');
        }
      }

      async function submitDoubt(event) {
        event.preventDefault();

        const doubtText = document.getElementById('doubt').value;
        const userId = '<%= typeof user !== "undefined" && user._id ? user._id : "default" %>'; // Use _id directly since we're setting both _id and userId to the same value

        if (!userId || userId === 'default') {
          alert('User not authenticated. Please log in again.');
          window.location.href = '/login';
          return;
        }

        if (!doubtText.trim()) {
          alert('Please enter your question');
          return;
        }

        // Show loading indicator
        const loadingIndicator = document.getElementById('loading-indicator');
        if (loadingIndicator) {
          loadingIndicator.style.display = 'block';
        }

        try {
          const response = await fetch('/submit_doubt', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              mentee_id: userId,
              doubt_text: doubtText
            })
          });

          const data = await response.json();

          if (response.ok) {
            if (data.status === 'matched') {
              // Show matched mentors
              const matchedMentorsDiv = document.getElementById('matched-mentors');
              matchedMentorsDiv.innerHTML = data.matched_mentors.map(mentor => `
                <div class="mentor-card">
                  <h3>${mentor.name}</h3>
                  <p>Compatibility: ${(mentor.compatibility_score * 100).toFixed(1)}%</p>
                  <button onclick="startSession('${mentor._id}')">Start Session</button>
                </div>
              `).join('');
              matchedMentorsDiv.style.display = 'block';
            } else if (data.status === 'offline_match') {
              // Show offline mentor matches
              const offlineMentorsDiv = document.getElementById('offline-mentors');
              offlineMentorsDiv.innerHTML = data.offline_mentors.map(mentor => `
                <div class="mentor-card offline">
                  <h3>${mentor.name}</h3>
                  <p>Compatibility: ${(mentor.compatibility_score * 100).toFixed(1)}%</p>
                  <p class="status">Currently Offline</p>
                  <button onclick="requestOfflineMatch('${mentor._id}')">Request Match</button>
                </div>
              `).join('');
              offlineMentorsDiv.style.display = 'block';
            } else {
              alert('No mentors available at the moment. Please try again later.');
            }
          } else {
            alert(data.error || 'Failed to submit doubt. Please try again.');
          }
        } catch (error) {
          console.error('Error submitting doubt:', error);
          alert('An error occurred while submitting your question. Please try again.');
        } finally {
          // Hide loading indicator
          if (loadingIndicator) {
            loadingIndicator.style.display = 'none';
          }
        }
      }
    </script>
  </body>
</html>
